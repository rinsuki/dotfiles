#!/bin/bash
set -ue

assert-file-not-exists .yarnrc ".yarnrc already exists"
assert-file-not-exists .yarn ".yarn directory already exists"
assert-file-not-exists package.json "package.json already exists"
assert-file-not-exists yarn.lock "yarn.lock already exists"

echo "Setup Yarn V2 (berry) Project in current directory ($(PWD))."
echo -n "OK? [y/N]: "
read ANS
if [ "$ANS" != y ]; then
    exit 1
fi
echo "Start!"

set -x

git init
yarn set version berry
yarn init
echo """
import json
with open('package.json', 'r') as f:
    pj = json.load(f)
pj['type'] = 'module'
pj['scripts'] = {
    'prettier': 'prettier .',
    'eslint': 'eslint .',
    'lint': 'yarn prettier -c && yarn eslint',
    'fix': 'yarn prettier -w && yarn eslint --fix',
}
pj['dependencies'] = {}
pj['devDependencies'] = {}
pj['prettier'] = '@rinsuki/prettier-config'
pj['eslintConfig'] = {'extends': '@rinsuki', 'parserOptions': {'project': ['./tsconfig.json']}}
with open('package.json', 'w') as f:
    json.dump(pj, f, indent=4)
""" | python3
echo """dist

# yarn v2
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/versions
.pnp.*
.vscode
""" > .gitignore

echo """dist
.yarn
.pnp.*" > .prettierignore
ln -s .prettierignore .eslintignore

yarn add -D typescript eslint prettier @rinsuki/eslint-config @rinsuki/prettier-config
yarn tsc --init --target es2021 --module node16 --outDir dist --experimentalDecorators --emitDecoratorMetadata --jsx react
yarn dlx @yarnpkg/sdks vscode

rm .editorconfig

mkdir src
echo 'console.log("Hello, world!")' > src/index.ts
yarn fix
